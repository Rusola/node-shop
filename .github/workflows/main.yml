# This is a basic workflow to help you get started with Actions


name: CI to AWS & Docker Hub
env:
  S3_BUCKET_NAME: "olga-shop-bucket"
  BEANSTALK_APP_NAME:  "new-shop-app"  
   # Shopbeanstalk-env cold be production pr staging env
  BEANSTALK_ENV: "NewShopApp-env"
  DEPLOY_PACKAGE_NAME: "my_shop_app_${{ github.sha }}.zip"  
  AWS_REGION: "us-east-2"

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This job should run all tests
  my_test_part:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    
    - name: Clone repo for tests
      uses: actions/checkout@v2
    
    - name: Setup Node
      uses: actions/setup-node@v1
      
    - name: Install npm packages
      run: npm install
      
    - name: Run all tests
      run: npm run test
     
  # This workflow contains a single job called " my_ci_part"
  my_ci_part:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [my_test_part]

    steps:
    
      - name: Git clone our Repo 
        uses: actions/checkout@v2
        
      - name: Create zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x*.git*
        
      - name : Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Copy deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.S3_BUCKET_NAME }}/
     
      - name: Print message
        run: echo "Package has been deployed to S3"

# Next job will run only when 'my_ci_part' finished
  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]

    steps:
       
      - name : Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name:  Create new ElastikBeanStalk app
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.BEANSTALK_APP_NAME }} \
          --source-bundle S3Bucket="${{ env.S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "v-${{ github.sha }}" \
          --description "created after Commit ${{ github.sha }}"
           
      - name: Deploy new ElastikBeanStalk app
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.BEANSTALK_ENV }} --version-label "v-${{ github.sha }}"
      
  # Next job will run only when deployment finished
  my_dockerHub_part:
    runs-on: ubuntu-latest
    needs: [my_cd_part]

    steps:
       
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2

  


